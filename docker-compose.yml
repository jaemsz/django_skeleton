version: '3.8'

services:
  django:
    container_name: django
    build:
      context: ./
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/opt/skeleton
    ports:
      - 8001:8000
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - redis
      - postgres

  celerybeat:
    container_name: celerybeat
    build:
      context: ./
    command: celery -A skeleton beat
    volumes:
      - ./:/opt/skeleton
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - redis

  celery:
    container_name: celery
    build:
      context: ./
    command: celery -A skeleton worker -Q queue1 -l INFO
    volumes:
      - ./:/opt/skeleton
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - redis

  postgres:
    image: postgres:alpine3.19
    container_name: postgres
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  redis:
    image: redis:alpine3.19
    container_name: redis
